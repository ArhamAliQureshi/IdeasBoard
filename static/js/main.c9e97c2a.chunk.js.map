{"version":3,"sources":["components/NavBar.js","components/Idea.js","components/IdeasList.js","components/Notification.js","App.js","serviceWorker.js","reducers/rootReducer.js","sagas/saga.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","useStyles","makeStyles","theme","card","minWidth","minHeight","addCard","backgroundColor","cardAction","justifyContent","body","borderBottom","titleRezise","fontSize","fontWeight","textAlign","bodyResize","image","height","paddingTop","Idea","props","useState","cardFocus","setCardFocus","titleFocus","setTitleFocus","bodyFocus","setBodyFocus","classes","updateIdea","id","title","document","getElementById","value","dispatch","type","data","useEffect","idea","ideasList","length","focus","Card","className","onMouseEnter","onMouseLeave","CardContent","CardMedia","img","TextField","onFocus","onBlur","InputProps","disableUnderline","input","defaultValue","placeholder","multiline","rows","CardActions","display","moment","parseInt","created_date","format","Button","size","onClick","Fab","aria-label","root","IndeasList","counter","useSelector","state","useDispatch","Grid","container","spacing","key","item","xs","sm","lg","xl","map","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","green","palette","dark","primary","main","amber","icon","iconVariant","opacity","marginRight","message","alignItems","MySnackbarContentWrapper","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","action","IconButton","useStyles2","margin","CustomizedSnackbars","notification","handleClick","React","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","App","Boolean","window","location","hostname","match","intialState","rootReducer","getAllIdeas","deleteIdeaAsync","addIdeaAsync","updateIdeaAsync","rootSaga","JSON","parse","localStorage","getItem","params","delay","put","select","store","find","splice","indexOf","setItem","stringify","push","Date","getTime","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9e97c2a.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\nconst  NavBar = () =>{\r\n    return (<div>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"title\" color=\"inherit\">\r\n                    Coolshop Ideas Sharing Board\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    </div>);\r\n};\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport moment from 'moment';\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        minWidth: \"200px\",\r\n        minHeight: \"200px\",\r\n    },\r\n    addCard: {\r\n        minWidth: \"200px\",\r\n        minHeight: \"200px\",\r\n        backgroundColor: \"rgba(65,185,81,0.6)\"\r\n    },\r\n    cardAction: {\r\n        //    textAlign:\"center\",\r\n        justifyContent: 'flex-end'\r\n    },\r\n    body: {\r\n        borderBottom: \"rgba(0,0,0,0)\",\r\n    },\r\n    titleRezise: {\r\n        fontSize: 12,\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\"\r\n    },\r\n    bodyResize: {\r\n        fontSize: 12,\r\n        // textAlign: \"center\"\r\n    },\r\n    image: {\r\n        height: 0,\r\n        paddingTop: '50%'\r\n    }\r\n}));\r\n// const useStyles = makeStyles();\r\n\r\n\r\nconst Idea = (props) => {\r\n    const [cardFocus, setCardFocus] = useState(false);\r\n    const [titleFocus, setTitleFocus] = useState(false);\r\n    const [bodyFocus, setBodyFocus] = useState(false);\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (props.idea && !props.idea.title) {\r\n\r\n            document.getElementById(`Title${props.ideasList.length}`).focus();\r\n        }\r\n    }, []);\r\n\r\n    function deleteIdea(id) {\r\n\r\n        props.dispatch({ type: \"DELETE_IDEA\", id });\r\n    }\r\n    function addIdea() {\r\n        props.dispatch({ type: \"ADD_IDEA\" });\r\n    }\r\n    function updateIdea(id) {\r\n        setTitleFocus(false);\r\n        setBodyFocus(false);\r\n        let title = document.getElementById(\"Title\" + id).value;\r\n        let body = document.getElementById(\"Body\" + id).value;\r\n        props.dispatch({ type: \"UPDATE_IDEA\", data: { id, title, body } });\r\n    }\r\n\r\n\r\n    return (<div>\r\n        {props.idea ? (\r\n            <Card className={classes.card}\r\n                onMouseEnter={() => { setCardFocus(true) }}\r\n                onMouseLeave={() => { setCardFocus(false) }}\r\n            >\r\n                <CardContent>\r\n                    {(cardFocus || titleFocus || bodyFocus) && <CardMedia\r\n                        className={classes.image}\r\n                        image={props.idea.img || \"https://marketingland.com/wp-content/ml-loads/2015/11/idea_1920-800x600.jpg\"}\r\n                    />}\r\n                    {/* {console.log(`Title${props.key}`,props)} */}\r\n                    <TextField\r\n                        id={\"Title\" + props.idea.id}\r\n                        onFocus={() => { setTitleFocus(true) }}\r\n                        onBlur={() => { updateIdea(props.idea.id) }}\r\n                        InputProps={{\r\n                            disableUnderline: !titleFocus,\r\n                            classes: {\r\n                                input: classes.titleRezise,\r\n                            },\r\n                        }}\r\n                        defaultValue={props.idea.title}\r\n                        placeholder=\"Please add title\"\r\n                    />\r\n                    <TextField\r\n                        id={\"Body\" + props.idea.id}\r\n                        onFocus={() => { setBodyFocus(true) }}\r\n                        onBlur={() => { updateIdea(props.idea.id) }}\r\n                        InputProps={{\r\n                            disableUnderline: !bodyFocus,\r\n                            classes: {\r\n                                input: classes.bodyResize,\r\n                            },\r\n                        }}\r\n                        multiline\r\n                        rows=\"5\"\r\n                        defaultValue={props.idea.body}\r\n                        placeholder={\"Please add details\"}\r\n                    />\r\n                </CardContent>\r\n                <CardActions className={classes.cardAction}>\r\n                    {}\r\n                    <Typography variant=\"caption\" display=\"block\">{moment(parseInt(props.idea.created_date)).format(\"DD/MM/YYYY\")}</Typography>\r\n                    {(cardFocus || titleFocus || bodyFocus) &&\r\n                        <Button variant=\"contained\" size=\"small\" color=\"secondary\" onClick={() => deleteIdea(props.idea.id)}>\r\n                            Delete\r\n                        </Button>}\r\n                </CardActions>\r\n            </Card>\r\n        ) :\r\n            (<Card className={classes.addCard}\r\n                onClick={addIdea}\r\n            >\r\n                <CardContent>\r\n                    <br />\r\n                    <Typography variant=\"h6\" display=\"h2\">Add New Idea</Typography>\r\n                    <Fab color=\"primary\" aria-label=\"add\">\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </CardContent>\r\n            </Card>)\r\n        }\r\n    </div>);\r\n}\r\n\r\nexport default Idea;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Idea from '../components/Idea'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        //   marginLeft: \"10px\",\r\n    }\r\n}));\r\n\r\nexport default function IndeasList() {\r\n    const classes = useStyles();\r\n    const counter = useSelector(state => state.counter);\r\n    const ideasList = useSelector(state => state.ideasList);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"GET_IDEAS\" });\r\n    }, []);\r\n   \r\n    \r\n    return (\r\n        <div>\r\n            <br/>\r\n            <Fab color=\"primary\" aria-label=\"add\">{counter}</Fab>\r\n            <Typography variant=\"h6\" display=\"h2\">Total Ideas</Typography>\r\n\r\n\r\n            <div>\r\n                {/* <TextField\r\n                    id=\"SearchInput\"\r\n                    placeholder=\"Filter Ideas\"\r\n                    margin=\"normal\"\r\n                    onChange={searchInputChange}\r\n                /> */}\r\n                <Grid container spacing={2} className={classes.root}>\r\n                    <Grid key={0} item xs={12} sm={6} lg={2} xl={3}>\r\n                        <Idea ideasList={ideasList} dispatch={dispatch} />\r\n                    </Grid>\r\n                    {ideasList.map((idea, key) => {\r\n                        return <Grid key={key + 1} item xs={12} sm={6} lg={2} xl={3}>\r\n                            <Idea idea={idea} ideasList={ideasList} dispatch={dispatch} />\r\n                        </Grid>\r\n                    })}\r\n                </Grid>\r\n            </div>\r\n        </div>);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles2();\r\n  const notification = useSelector(state => state.notification);\r\n  useEffect(() => {\r\n    handleClick();\r\n  }, [notification]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    if(notification.message){\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message={notification.message}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport IdeasList from './components/IdeasList';\nimport Notification from './components/Notification';\n// import Cards from './components/Cards'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <IdeasList/>\n      <Notification />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const intialState = {\r\n    counter: 0,\r\n    ideasList: [],\r\n    notification: {}\r\n}\r\n\r\nfunction rootReducer(state = intialState, action) {\r\n    switch (action.type) {\r\n        case 'STORE_ALL_IDEAS':\r\n            return {...state, ...action, counter: action.ideasList.length}\r\n        case 'ADD_IDEA_ASYNC':\r\n            return { ...state, ...action, counter: action.ideasList.length};\r\n        case 'DELETE_IDEA_ASYNC':\r\n            return { ...state, ...action, counter: action.ideasList.length};\r\n        case 'UPDATE_IDEA_ASYNC':\r\n            return { ...state, ...action, counter: action.ideasList.length };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { delay } from 'redux-saga/effects';\r\nimport { select } from 'redux-saga/effects';\r\nimport { fork, takeLatest, takeEvery, put } from 'redux-saga/effects';\r\n\r\nlet ideasList = JSON.parse(localStorage.getItem(\"ideasList\")) || [\r\n    { id: \"1\", created_date: \"1575921600000\", title: \"Flying Cars\", body: \"Using hydrogen we can fly cars.\", img: \"https://static.euronews.com/articles/stories/03/83/78/88/945x531_cmsv2_8e055c3d-1f36-5f3f-ac17-b2f2f05cd7a3-3837888.jpg\" },\r\n    { id: \"2\", created_date: \"1576008000000\", title: \"Hyperloop\", body: \"Reinvent transportation to eliminate the barriers of distance.\", img: \"https://www.thetimes.co.uk/raconteur/s3/raconteur-prod/uploads/2017/11/Hardt-Hyperloop-hero-shot-credits-Hardt-Hyperloop.jpg\" },\r\n    { id: \"3\", created_date: \"1576094400000\", title: \"Swimming Cars\", body: \"Cars like boats are more fun to ride.\", img: \"https://i.pinimg.com/originals/6a/97/c1/6a97c17cb22aa3d8d4c9c3da88600479.jpg\" }\r\n];\r\n\r\n\r\nfunction* getAllIdeas(params) {\r\n    yield delay(1000);\r\n    yield put({ type: 'STORE_ALL_IDEAS', ideasList });\r\n}\r\n\r\nfunction* deleteIdeaAsync(params) {\r\n    yield delay(1000);\r\n    let store = yield select((data) => data);\r\n    let ideasList = [...store.ideasList];\r\n\r\n    let idea = ideasList.find((item) => item.id === params.id);\r\n    ideasList.splice(ideasList.indexOf(idea), 1);\r\n    yield put({ \r\n        type: 'DELETE_IDEA_ASYNC', \r\n        notification: {message:\"Idea deleted\"},\r\n        ideasList\r\n     });\r\n    localStorage.setItem(\"ideasList\", JSON.stringify(ideasList));\r\n}\r\n\r\nfunction* addIdeaAsync(params) {\r\n    yield delay(1000);\r\n    let store = yield select((data) => data);\r\n    let ideasList = [...store.ideasList];\r\n    ideasList.push({ id: ideasList.length + 1, created_date: new Date().getTime() })\r\n    yield put({\r\n        type: 'ADD_IDEA_ASYNC', \r\n        notification: {message:\"New idea added\"},\r\n        ideasList\r\n    });\r\n    localStorage.setItem(\"ideasList\", JSON.stringify(ideasList));\r\n}\r\n\r\nfunction* updateIdeaAsync(params) {\r\n    yield delay(1000);\r\n    let store = yield select((data) => data);\r\n    let ideasList = [...store.ideasList];\r\n\r\n    let idea = ideasList.find((item) => item.id === params.data.id);\r\n    idea.title = params.data.title;\r\n    idea.body = params.data.body;\r\n    yield put({ \r\n        type: 'UPDATE_IDEA_ASYNC',\r\n        notification: {message:\"Idea updated\"},\r\n        ideasList \r\n    });\r\n    localStorage.setItem(\"ideasList\", JSON.stringify(ideasList));\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield takeLatest('GET_IDEAS', getAllIdeas);\r\n    yield takeEvery('DELETE_IDEA', deleteIdeaAsync);\r\n    yield takeLatest('ADD_IDEA', addIdeaAsync);\r\n    yield takeLatest('UPDATE_IDEA', updateIdeaAsync);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport  rootSaga  from './sagas/saga';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store  = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}